import type { ConfigItem, TableColumn, TableFilter } from "@/modules/shared/types";
import type { LoadedProductItem, KernelData } from "./loadedProductItemsTypes";

// A utility type to make all properties of an object, including nested ones, optional.
type DeepPartial<T> = {
  [P in keyof T]?: T[P] extends object ? DeepPartial<T[P]> : T[P];
};

export const tableHead: TableColumn[] = [
  { columnName: "ID", row_id: "id", type: "string" },
  { columnName: "Weight", row_id: "weight", type: "number" },
  { columnName: "Number", row_id: "number", type: "number" },
  { columnName: "Product", row_id: "loaded_product.product.product.name", type: "string" },
  { columnName: "Product Owner", row_id: "loaded_product.product.product_owner.name", type: "string" },
  { columnName: "Price", row_id: "loaded_product.price", type: "number" },
  { columnName: "Car", row_id: "loaded_product.car.car.car.car_number", type: "string" },
  { columnName: "Driver", row_id: "loaded_product.car.car.driver.contact.name", type: "string" },
  { columnName: "Level", row_id: "loaded_product.car.level", type: "string" },
  { columnName: "Buyer", row_id: "loaded_product.car.buyer", type: "string" },
];

export function getCreateDialogConfigs({
                                         products,
                                         owners,
                                         cars,
                                         drivers,
                                       }: KernelData): ConfigItem[] {
  return [
    {
      name: "weight",
      label: "Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "number",
      label: "Number",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.product.product",
      label: "Product",
      type: "select-box",
      options: products,
      defaultValue: products?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.product.product_owner",
      label: "Product Owner",
      type: "select-box",
      options: owners,
      defaultValue: owners?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.created.date",
      label: "Created Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.created.user",
      label: "Created User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.price",
      label: "Price",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.car.car",
      label: "Car",
      type: "select-box",
      options: cars,
      defaultValue: cars?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.car.car.driver",
      label: "Driver",
      type: "select-box",
      options: drivers,
      defaultValue: drivers?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.car.create_at.date",
      label: "Car Create Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.car.create_at.user",
      label: "Car Create User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.level",
      label: "Level",
      type: "select-box",
      options: [
        { label: "entrance", value: "entrance" },
        { label: "loading", value: "loading" },
        { label: "exit", value: "exit" },
      ],
      defaultValue: "entrance",
      required: true,
    },
    {
      name: "loaded_product.car.first_weight.weight",
      label: "First Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.first_weight.date.date",
      label: "First Weight Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.car.first_weight.date.user",
      label: "First Weight User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.last_weight.weight",
      label: "Last Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.last_weight.date.date",
      label: "Last Weight Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.car.last_weight.date.user",
      label: "Last Weight User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.buyer",
      label: "Buyer",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.entrance_date.date",
      label: "Entrance Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.car.entrance_date.user",
      label: "Entrance User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.exit_date.date",
      label: "Exit Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: true,
    },
    {
      name: "loaded_product.car.exit_date.user",
      label: "Exit User",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.is_cancelled.status",
      label: "Cancelled Status",
      type: "switch",
      defaultValue: false,
      required: false,
    },
    {
      name: "loaded_product.car.is_cancelled.user_date.date",
      label: "Cancelled Date",
      type: "string-input",
      defaultValue: "2025-08-13 18:53",
      required: false,
    },
    {
      name: "loaded_product.car.is_cancelled.user_date.user",
      label: "Cancelled User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.is_weight_base",
      label: "Is Weight Base",
      type: "switch",
      defaultValue: true,
      required: true,
    },
  ];
}

export function getUpdateDialogConfigs({
                                         products,
                                         owners,
                                         cars,
                                         drivers,
                                       }: KernelData): ConfigItem[] {
  return [
    {
      name: "id",
      label: "ID",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "weight",
      label: "Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "number",
      label: "Number",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.product.product",
      label: "Product",
      type: "select-box",
      options: products,
      defaultValue: products?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.product.product_owner",
      label: "Product Owner",
      type: "select-box",
      options: owners,
      defaultValue: owners?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.created.date",
      label: "Created Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.created.user",
      label: "Created User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.price",
      label: "Price",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.car.car",
      label: "Car",
      type: "select-box",
      options: cars,
      defaultValue: cars?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.car.car.driver",
      label: "Driver",
      type: "select-box",
      options: drivers,
      defaultValue: drivers?.[0]?.value,
      required: true,
    },
    {
      name: "loaded_product.car.create_at.date",
      label: "Car Create Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.create_at.user",
      label: "Car Create User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.level",
      label: "Level",
      type: "select-box",
      options: [
        { label: "entrance", value: "entrance" },
        { label: "loading", value: "loading" },
        { label: "exit", value: "exit" },
      ],
      defaultValue: "entrance",
      required: true,
    },
    {
      name: "loaded_product.car.first_weight.weight",
      label: "First Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.first_weight.date.date",
      label: "First Weight Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.first_weight.date.user",
      label: "First Weight User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.last_weight.weight",
      label: "Last Weight",
      type: "int-input",
      defaultValue: 0,
      required: true,
    },
    {
      name: "loaded_product.car.last_weight.date.date",
      label: "Last Weight Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.last_weight.date.user",
      label: "Last Weight User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.buyer",
      label: "Buyer",
      type: "string-input",
      defaultValue: "",
      required: true,
    },
    {
      name: "loaded_product.car.entrance_date.date",
      label: "Entrance Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.entrance_date.user",
      label: "Entrance User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.exit_date.date",
      label: "Exit Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.exit_date.user",
      label: "Exit User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.is_cancelled.status",
      label: "Cancelled Status",
      type: "switch",
      defaultValue: false,
      required: false,
    },
    {
      name: "loaded_product.car.is_cancelled.user_date.date",
      label: "Cancelled Date",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.car.is_cancelled.user_date.user",
      label: "Cancelled User",
      type: "string-input",
      defaultValue: "",
      required: false,
    },
    {
      name: "loaded_product.is_weight_base",
      label: "Is Weight Base",
      type: "switch",
      defaultValue: true,
      required: true,
    },
  ];
}

export const updateDialogDocs: DeepPartial<LoadedProductItem> = {
  id: "174",
  weight: 0,
  number: 0,
  loaded_product: {
    product: {
      product: "string",
      product_owner: "string",
    },
    created: {
      date: "2025-08-13 18:53",
      user: "string",
    },
    price: 0,
    car: {
      car: {
        driver: "",
        car: "",
      },
      create_at: {
        date: "2025-08-13 18:53",
        user: "string",
      },
      level: "entrance",
      first_weight: {
        weight: 0,
        date: {
          date: "2025-08-13 18:53",
          user: "string",
        },
      },
      last_weight: {
        weight: 0,
        date: {
          date: "2025-08-13 18:53",
          user: "string",
        },
      },
      buyer: "string",
      entrance_date: {
        date: "2025-08-13 18:53",
        user: "string",
      },
      exit_date: {
        date: "2025-08-13 18:53",
        user: "string",
      },
      is_cancelled: {
        status: false,
        user_date: {
          date: "2025-08-13 18:53",
          user: "string",
        },
      },
    },
    is_weight_base: true,
  },
};

export const tableFilter: TableFilter[] = [
  {
    name: "weight",
    label: "Weight",
    type: "range",
    min: 0,
    max: 10000,
    step: 10,
    defaultValue: [0, 5000],
  },
  {
    name: "number",
    label: "Number",
    type: "range",
    min: 0,
    max: 1000,
    step: 1,
    defaultValue: [0, 500],
  },
  {
    name: "loaded_product__product__product",
    label: "Product",
    type: "autocomplete",
    options: [],
    placeholder: "Search product",
    defaultValue: "",
  },
  {
    name: "loaded_product__product__product_owner",
    label: "Product Owner",
    type: "autocomplete",
    options: [],
    placeholder: "Search product owner",
    defaultValue: "",
  },
  {
    name: "loaded_product__price",
    label: "Price",
    type: "range",
    min: 0,
    max: 10000,
    step: 1,
    defaultValue: [0, 5000],
  },
  {
    name: "loaded_product__car__car__car",
    label: "Car",
    type: "autocomplete",
    options: [],
    placeholder: "Search car",
    defaultValue: "",
  },
  {
    name: "loaded_product__car__car__driver",
    label: "Driver",
    type: "autocomplete",
    options: [],
    placeholder: "Search driver",
    defaultValue: "",
  },
  {
    name: "loaded_product__car__level",
    label: "Level",
    type: "select-box",
    options: [
      { label: "entrance", value: "entrance" },
      { label: "loading", value: "loading" },
      { label: "exit", value: "exit" },
    ],
    defaultValue: "entrance",
  },
  {
    name: "loaded_product__car__buyer",
    label: "Buyer",
    type: "autocomplete",
    options: [],
    placeholder: "Search buyer",
    defaultValue: "",
  },
  {
    name: "loaded_product__car__is_cancelled__status",
    label: "Cancelled Status",
    type: "boolean",
    defaultValue: false,
  },
  {
    name: "loaded_product__is_weight_base",
    label: "Is Weight Base",
    type: "boolean",
    defaultValue: true,
  },
  {
    name: "loaded_product__created__date",
    label: "Created Date",
    type: "range-date",
    defaultValue: ["2025-01-01", "2025-12-31"],
  },
];