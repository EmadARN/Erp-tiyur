import http from "@/modules/shared/lib/httpService";
import { axiosBaseQuery } from "@/modules/shared/lib/rtkQueryBase";
import { createApi } from "@reduxjs/toolkit/query/react";
import type {
  BuyProduct,
  CreateBuyProductDto,
  OrdersResponse,
} from "../model/buysProduct";

export const buyProductApi = createApi({
  reducerPath: "buysApi",
  baseQuery: axiosBaseQuery(http.buyApi),
  tagTypes: ["BuyProduct"], // Tag for cache management
  endpoints: (builder) => ({
    getBuyProduct: builder.query<OrdersResponse, Record<string, any>>({
      query: (filters = {}) => ({
        url: "/buy-product/",
        method: "get",
        params: filters, // Support for filter and search parameters
      }),
      providesTags: ["BuyProduct"], // This query provides the BuyProduct tag
    }),
    getBuyProductDetails: builder.query<BuyProduct, { id: string }>({
      query: ({ id }) => ({
        url: `/buy-product/c/${id}/`,
        method: "get",
      }),
    }),
    postBuyProduct: builder.mutation<BuyProduct, Partial<CreateBuyProductDto>>({
      query: (body) => ({
        url: "/buy-product/create/",
        method: "post",
        data: body,
      }),
      invalidatesTags: ["BuyProduct"], // Invalidates the BuyProduct tag after POST
    }),
    patchBuyProduct: builder.mutation<
      BuyProduct,
      { id: string; data: Partial<BuyProduct> }
    >({
      query: ({ id, data }) => ({
        url: `/buy-product/c/${id}/`,
        method: "patch",
        data,
      }),
      invalidatesTags: ["BuyProduct"], // Invalidates the BuyProduct tag after PATCH
    }),
    deleteBulkBuyProduct: builder.mutation<void, { data: { data: string[] } }>({
      query: ({ data }) => ({
        url: "/buy-product/",
        method: "delete",
        data,
      }),
      invalidatesTags: ["BuyProduct"], // Invalidates the BuyProduct tag after DELETE
    }),
    deleteBuyProduct: builder.mutation<void, { id: string }>({
      query: ({ id }) => ({
        url: `/buy-product/c/${id}/`,
        method: "delete",
      }),
      invalidatesTags: ["BuyProduct"], // Invalidates the BuyProduct tag after DELETE
    }),
  }),
});

export const {
  useGetBuyProductQuery,
  useGetBuyProductDetailsQuery,
  usePostBuyProductMutation,
  usePatchBuyProductMutation,
  useDeleteBulkBuyProductMutation,
  useDeleteBuyProductMutation,
} = buyProductApi;

//
// {
//   "message": "Invalid filter parameters received.",
//     "allowed_filter_parameters": [
//   "car__exact",
//   "car__ne",
//   "car__in",
//   "car__nin",
//   "car__exists",
//   "car__car__exact",
//   "car__car__iexact",
//   "car__car__contains",
//   "car__car__icontains",
//   "car__car__startswith",
//   "car__car__istartswith",
//   "car__car__endswith",
//   "car__car__iendswith",
//   "car__car__ne",
//   "car__car__in",
//   "car__car__nin",
//   "car__car__exists",
//   "car__car__regex",
//   "car__car__iregex",
//   "car__driver__exact",
//   "car__driver__iexact",
//   "car__driver__contains",
//   "car__driver__icontains",
//   "car__driver__startswith",
//   "car__driver__istartswith",
//   "car__driver__endswith",
//   "car__driver__iendswith",
//   "car__driver__ne",
//   "car__driver__in",
//   "car__driver__nin",
//   "car__driver__exists",
//   "car__driver__regex",
//   "car__driver__iregex",
//   "order_information__exact",
//   "order_information__ne",
//   "order_information__in",
//   "order_information__nin",
//   "order_information__exists",
//   "order_information__agriculture__exact",
//   "order_information__agriculture__iexact",
//   "order_information__agriculture__contains",
//   "order_information__agriculture__icontains",
//   "order_information__agriculture__startswith",
//   "order_information__agriculture__istartswith",
//   "order_information__agriculture__endswith",
//   "order_information__agriculture__iendswith",
//   "order_information__agriculture__ne",
//   "order_information__agriculture__in",
//   "order_information__agriculture__nin",
//   "order_information__agriculture__exists",
//   "order_information__agriculture__regex",
//   "order_information__agriculture__iregex",
//   "order_information__product_owner__exact",
//   "order_information__product_owner__iexact",
//   "order_information__product_owner__contains",
//   "order_information__product_owner__icontains",
//   "order_information__product_owner__startswith",
//   "order_information__product_owner__istartswith",
//   "order_information__product_owner__endswith",
//   "order_information__product_owner__iendswith",
//   "order_information__product_owner__ne",
//   "order_information__product_owner__in",
//   "order_information__product_owner__nin",
//   "order_information__product_owner__exists",
//   "order_information__product_owner__regex",
//   "order_information__product_owner__iregex",
//   "order_information__slaughter_type__exact",
//   "order_information__slaughter_type__iexact",
//   "order_information__slaughter_type__contains",
//   "order_information__slaughter_type__icontains",
//   "order_information__slaughter_type__startswith",
//   "order_information__slaughter_type__istartswith",
//   "order_information__slaughter_type__endswith",
//   "order_information__slaughter_type__iendswith",
//   "order_information__slaughter_type__ne",
//   "order_information__slaughter_type__in",
//   "order_information__slaughter_type__nin",
//   "order_information__slaughter_type__exists",
//   "order_information__slaughter_type__regex",
//   "order_information__slaughter_type__iregex",
//   "order_information__order_type__exact",
//   "order_information__order_type__iexact",
//   "order_information__order_type__contains",
//   "order_information__order_type__icontains",
//   "order_information__order_type__startswith",
//   "order_information__order_type__istartswith",
//   "order_information__order_type__endswith",
//   "order_information__order_type__iendswith",
//   "order_information__order_type__ne",
//   "order_information__order_type__in",
//   "order_information__order_type__nin",
//   "order_information__order_type__exists",
//   "order_information__order_type__regex",
//   "order_information__order_type__iregex",
//   "order_information__product__exact",
//   "order_information__product__iexact",
//   "order_information__product__contains",
//   "order_information__product__icontains",
//   "order_information__product__startswith",
//   "order_information__product__istartswith",
//   "order_information__product__endswith",
//   "order_information__product__iendswith",
//   "order_information__product__ne",
//   "order_information__product__in",
//   "order_information__product__nin",
//   "order_information__product__exists",
//   "order_information__product__regex",
//   "order_information__product__iregex",
//   "required_weight__exact",
//   "required_weight__lt",
//   "required_weight__lte",
//   "required_weight__gt",
//   "required_weight__gte",
//   "required_weight__ne",
//   "required_weight__in",
//   "required_weight__nin",
//   "required_weight__mod",
//   "required_weight__exists",
//   "required_number__exact",
//   "required_number__lt",
//   "required_number__lte",
//   "required_number__gt",
//   "required_number__gte",
//   "required_number__ne",
//   "required_number__in",
//   "required_number__nin",
//   "required_number__mod",
//   "required_number__exists",
//   "weight__exact",
//   "weight__lt",
//   "weight__lte",
//   "weight__gt",
//   "weight__gte",
//   "weight__ne",
//   "weight__in",
//   "weight__nin",
//   "weight__mod",
//   "weight__exists",
//   "quality__exact",
//   "quality__iexact",
//   "quality__contains",
//   "quality__icontains",
//   "quality__startswith",
//   "quality__istartswith",
//   "quality__endswith",
//   "quality__iendswith",
//   "quality__ne",
//   "quality__in",
//   "quality__nin",
//   "quality__exists",
//   "quality__regex",
//   "quality__iregex",
//   "status__exact",
//   "status__iexact",
//   "status__contains",
//   "status__icontains",
//   "status__startswith",
//   "status__istartswith",
//   "status__endswith",
//   "status__iendswith",
//   "status__ne",
//   "status__in",
//   "status__nin",
//   "status__exists",
//   "status__regex",
//   "status__iregex",
//   "create__exact",
//   "create__exists",
//   "create__date__exact",
//   "create__date__iexact",
//   "create__date__contains",
//   "create__date__icontains",
//   "create__date__startswith",
//   "create__date__istartswith",
//   "create__date__endswith",
//   "create__date__iendswith",
//   "create__date__ne",
//   "create__date__in",
//   "create__date__nin",
//   "create__date__exists",
//   "create__date__regex",
//   "create__date__iregex",
//   "create__user__exact",
//   "create__user__iexact",
//   "create__user__contains",
//   "create__user__icontains",
//   "create__user__startswith",
//   "create__user__istartswith",
//   "create__user__endswith",
//   "create__user__iendswith",
//   "create__user__ne",
//   "create__user__in",
//   "create__user__nin",
//   "create__user__exists",
//   "create__user__regex",
//   "create__user__iregex",
//   "verified__exact",
//   "verified__exists",
//   "verified__user_date__exact",
//   "verified__user_date__exists",
//   "verified__user_date__date__exact",
//   "verified__user_date__date__iexact",
//   "verified__user_date__date__contains",
//   "verified__user_date__date__icontains",
//   "verified__user_date__date__startswith",
//   "verified__user_date__date__istartswith",
//   "verified__user_date__date__endswith",
//   "verified__user_date__date__iendswith",
//   "verified__user_date__date__ne",
//   "verified__user_date__date__in",
//   "verified__user_date__date__nin",
//   "verified__user_date__date__exists",
//   "verified__user_date__date__regex",
//   "verified__user_date__date__iregex",
//   "verified__user_date__user__exact",
//   "verified__user_date__user__iexact",
//   "verified__user_date__user__contains",
//   "verified__user_date__user__icontains",
//   "verified__user_date__user__startswith",
//   "verified__user_date__user__istartswith",
//   "verified__user_date__user__endswith",
//   "verified__user_date__user__iendswith",
//   "verified__user_date__user__ne",
//   "verified__user_date__user__in",
//   "verified__user_date__user__nin",
//   "verified__user_date__user__exists",
//   "verified__user_date__user__regex",
//   "verified__user_date__user__iregex",
//   "verified__status__exact",
//   "verified__status__ne",
//   "verified__status__exists",
//   "verified__description__exact",
//   "verified__description__iexact",
//   "verified__description__contains",
//   "verified__description__icontains",
//   "verified__description__startswith",
//   "verified__description__istartswith",
//   "verified__description__endswith",
//   "verified__description__iendswith",
//   "verified__description__ne",
//   "verified__description__in",
//   "verified__description__nin",
//   "verified__description__exists",
//   "verified__description__regex",
//   "verified__description__iregex",
//   "received__exact",
//   "received__exists",
//   "received__user_date__exact",
//   "received__user_date__exists",
//   "received__user_date__date__exact",
//   "received__user_date__date__iexact",
//   "received__user_date__date__contains",
//   "received__user_date__date__icontains",
//   "received__user_date__date__startswith",
//   "received__user_date__date__istartswith",
//   "received__user_date__date__endswith",
//   "received__user_date__date__iendswith",
//   "received__user_date__date__ne",
//   "received__user_date__date__in",
//   "received__user_date__date__nin",
//   "received__user_date__date__exists",
//   "received__user_date__date__regex",
//   "received__user_date__date__iregex",
//   "received__user_date__user__exact",
//   "received__user_date__user__iexact",
//   "received__user_date__user__contains",
//   "received__user_date__user__icontains",
//   "received__user_date__user__startswith",
//   "received__user_date__user__istartswith",
//   "received__user_date__user__endswith",
//   "received__user_date__user__iendswith",
//   "received__user_date__user__ne",
//   "received__user_date__user__in",
//   "received__user_date__user__nin",
//   "received__user_date__user__exists",
//   "received__user_date__user__regex",
//   "received__user_date__user__iregex",
//   "received__status__exact",
//   "received__status__ne",
//   "received__status__exists",
//   "received__description__exact",
//   "received__description__iexact",
//   "received__description__contains",
//   "received__description__icontains",
//   "received__description__startswith",
//   "received__description__istartswith",
//   "received__description__endswith",
//   "received__description__iendswith",
//   "received__description__ne",
//   "received__description__in",
//   "received__description__nin",
//   "received__description__exists",
//   "received__description__regex",
//   "received__description__iregex",
//   "finished__exact",
//   "finished__exists",
//   "finished__user_date__exact",
//   "finished__user_date__exists",
//   "finished__user_date__date__exact",
//   "finished__user_date__date__iexact",
//   "finished__user_date__date__contains",
//   "finished__user_date__date__icontains",
//   "finished__user_date__date__startswith",
//   "finished__user_date__date__istartswith",
//   "finished__user_date__date__endswith",
//   "finished__user_date__date__iendswith",
//   "finished__user_date__date__ne",
//   "finished__user_date__date__in",
//   "finished__user_date__date__nin",
//   "finished__user_date__date__exists",
//   "finished__user_date__date__regex",
//   "finished__user_date__date__iregex",
//   "finished__user_date__user__exact",
//   "finished__user_date__user__iexact",
//   "finished__user_date__user__contains",
//   "finished__user_date__user__icontains",
//   "finished__user_date__user__startswith",
//   "finished__user_date__user__istartswith",
//   "finished__user_date__user__endswith",
//   "finished__user_date__user__iendswith",
//   "finished__user_date__user__ne",
//   "finished__user_date__user__in",
//   "finished__user_date__user__nin",
//   "finished__user_date__user__exists",
//   "finished__user_date__user__regex",
//   "finished__user_date__user__iregex",
//   "finished__status__exact",
//   "finished__status__ne",
//   "finished__status__exists",
//   "finished__description__exact",
//   "finished__description__iexact",
//   "finished__description__contains",
//   "finished__description__icontains",
//   "finished__description__startswith",
//   "finished__description__istartswith",
//   "finished__description__endswith",
//   "finished__description__iendswith",
//   "finished__description__ne",
//   "finished__description__in",
//   "finished__description__nin",
//   "finished__description__exists",
//   "finished__description__regex",
//   "finished__description__iregex",
//   "done__exact",
//   "done__exists",
//   "done__user_date__exact",
//   "done__user_date__exists",
//   "done__user_date__date__exact",
//   "done__user_date__date__iexact",
//   "done__user_date__date__contains",
//   "done__user_date__date__icontains",
//   "done__user_date__date__startswith",
//   "done__user_date__date__istartswith",
//   "done__user_date__date__endswith",
//   "done__user_date__date__iendswith",
//   "done__user_date__date__ne",
//   "done__user_date__date__in",
//   "done__user_date__date__nin",
//   "done__user_date__date__exists",
//   "done__user_date__date__regex",
//   "done__user_date__date__iregex",
//   "done__user_date__user__exact",
//   "done__user_date__user__iexact",
//   "done__user_date__user__contains",
//   "done__user_date__user__icontains",
//   "done__user_date__user__startswith",
//   "done__user_date__user__istartswith",
//   "done__user_date__user__endswith",
//   "done__user_date__user__iendswith",
//   "done__user_date__user__ne",
//   "done__user_date__user__in",
//   "done__user_date__user__nin",
//   "done__user_date__user__exists",
//   "done__user_date__user__regex",
//   "done__user_date__user__iregex",
//   "done__status__exact",
//   "done__status__ne",
//   "done__status__exists",
//   "done__description__exact",
//   "done__description__iexact",
//   "done__description__contains",
//   "done__description__icontains",
//   "done__description__startswith",
//   "done__description__istartswith",
//   "done__description__endswith",
//   "done__description__iendswith",
//   "done__description__ne",
//   "done__description__in",
//   "done__description__nin",
//   "done__description__exists",
//   "done__description__regex",
//   "done__description__iregex",
//   "cancelled__exact",
//   "cancelled__exists",
//   "cancelled__user_date__exact",
//   "cancelled__user_date__exists",
//   "cancelled__user_date__date__exact",
//   "cancelled__user_date__date__iexact",
//   "cancelled__user_date__date__contains",
//   "cancelled__user_date__date__icontains",
//   "cancelled__user_date__date__startswith",
//   "cancelled__user_date__date__istartswith",
//   "cancelled__user_date__date__endswith",
//   "cancelled__user_date__date__iendswith",
//   "cancelled__user_date__date__ne",
//   "cancelled__user_date__date__in",
//   "cancelled__user_date__date__nin",
//   "cancelled__user_date__date__exists",
//   "cancelled__user_date__date__regex",
//   "cancelled__user_date__date__iregex",
//   "cancelled__user_date__user__exact",
//   "cancelled__user_date__user__iexact",
//   "cancelled__user_date__user__contains",
//   "cancelled__user_date__user__icontains",
//   "cancelled__user_date__user__startswith",
//   "cancelled__user_date__user__istartswith",
//   "cancelled__user_date__user__endswith",
//   "cancelled__user_date__user__iendswith",
//   "cancelled__user_date__user__ne",
//   "cancelled__user_date__user__in",
//   "cancelled__user_date__user__nin",
//   "cancelled__user_date__user__exists",
//   "cancelled__user_date__user__regex",
//   "cancelled__user_date__user__iregex",
//   "cancelled__status__exact",
//   "cancelled__status__ne",
//   "cancelled__status__exists",
//   "cancelled__description__exact",
//   "cancelled__description__iexact",
//   "cancelled__description__contains",
//   "cancelled__description__icontains",
//   "cancelled__description__startswith",
//   "cancelled__description__istartswith",
//   "cancelled__description__endswith",
//   "cancelled__description__iendswith",
//   "cancelled__description__ne",
//   "cancelled__description__in",
//   "cancelled__description__nin",
//   "cancelled__description__exists",
//   "cancelled__description__regex",
//   "cancelled__description__iregex",
//   "price__exact",
//   "price__exists",
//   "price__purchase_price_per_unit__exact",
//   "price__purchase_price_per_unit__lt",
//   "price__purchase_price_per_unit__lte",
//   "price__purchase_price_per_unit__gt",
//   "price__purchase_price_per_unit__gte",
//   "price__purchase_price_per_unit__ne",
//   "price__purchase_price_per_unit__in",
//   "price__purchase_price_per_unit__nin",
//   "price__purchase_price_per_unit__mod",
//   "price__purchase_price_per_unit__exists",
//   "price__cost_price__exact",
//   "price__cost_price__lt",
//   "price__cost_price__lte",
//   "price__cost_price__gt",
//   "price__cost_price__gte",
//   "price__cost_price__ne",
//   "price__cost_price__in",
//   "price__cost_price__nin",
//   "price__cost_price__mod",
//   "price__cost_price__exists",
//   "price__transportation_price__exact",
//   "price__transportation_price__lt",
//   "price__transportation_price__lte",
//   "price__transportation_price__gt",
//   "price__transportation_price__gte",
//   "price__transportation_price__ne",
//   "price__transportation_price__in",
//   "price__transportation_price__nin",
//   "price__transportation_price__mod",
//   "price__transportation_price__exists"
// ],
//     "invalid_filters": [
//   "ss"
// ]
// }
